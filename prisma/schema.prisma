// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    output   = "../src/generated/client"   
    previewFeatures = ["relationJoins"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Session {
    id Int @id @default(autoincrement())
    userId Int
    user User @relation(fields: [userId], references: [id])
    appKey String?
    jwt String?
    expiresAt DateTime
    createdAt DateTime @default(now())
}

model User {
    id Int @id @default(autoincrement())
    email String?
    name String?
    xboxId String? 
    gamerTag String @unique
    gamerScore String?
    imageUrl String?
    sessions Session[]
    achievements Achievement[]
    createdAt DateTime @default(now())
    updatedAt DateTime? @updatedAt
}

model Game {
    id Int @id @default(autoincrement())
    titleId Int @unique
    name String
    devices String[] 
    displayImage String?
    achievements Achievement[]
    createdAt DateTime @default(now())
    updatedAt DateTime? @updatedAt
}

model Achievement {
    id Int @id @default(autoincrement())
    gameId Int
    currentAchievements Int
    totalAchievements Int
    currentGamerscore Int
    totalGamerscore Int
    progressPercentage Int
    lastTimePlayed DateTime?
    userId Int
    user User @relation(fields: [userId], references: [id])
    game Game @relation(fields: [gameId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime? @updatedAt

    @@unique([userId, gameId])
}